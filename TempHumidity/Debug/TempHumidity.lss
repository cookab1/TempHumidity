
TempHumidity.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000b76  00000c0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800216  00800216  00000c20  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c20  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001293  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e9a  00000000  00000000  00001fef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f0  00000000  00000000  00002e89  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000357c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e1  00000000  00000000  0000373c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000488  00000000  00000000  00003e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000042a5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	fc c0       	rjmp	.+504    	; 0x21e <__vector_9>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	89 c0       	rjmp	.+274    	; 0x158 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e7       	ldi	r30, 0x76	; 118
  fc:	fb e0       	ldi	r31, 0x0B	; 11
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 31       	cpi	r26, 0x16	; 22
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e1       	ldi	r26, 0x16	; 22
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a7 32       	cpi	r26, 0x27	; 39
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	6c d1       	rcall	.+728    	; 0x3f8 <main>
 120:	28 c5       	rjmp	.+2640   	; 0xb72 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <recieveData>:
		reset();
	}
}

void recieveData() {
    PORTB &= 0;
 124:	85 b1       	in	r24, 0x05	; 5
 126:	15 b8       	out	0x05, r1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	8f e1       	ldi	r24, 0x1F	; 31
 12a:	9e e4       	ldi	r25, 0x4E	; 78
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <recieveData+0x8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <recieveData+0xe>
 132:	00 00       	nop
    _delay_ms(5);
    PORTB |= (1 << port_mask);
 134:	29 9a       	sbi	0x05, 1	; 5
    DDRB = 0;
 136:	14 b8       	out	0x04, r1	; 4
    
    microsec = 0;
 138:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <microsec+0x1>
 13c:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <microsec>
    //char temp[3];
    //sprintf(temp, "%d", microsec);
    //print(temp);
	
    sei();
 140:	78 94       	sei
 142:	9f ef       	ldi	r25, 0xFF	; 255
 144:	2b e7       	ldi	r18, 0x7B	; 123
 146:	82 e9       	ldi	r24, 0x92	; 146
 148:	91 50       	subi	r25, 0x01	; 1
 14a:	20 40       	sbci	r18, 0x00	; 0
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <recieveData+0x24>
 150:	00 c0       	rjmp	.+0      	; 0x152 <recieveData+0x2e>
 152:	00 00       	nop
    //ready to receive the bits
	_delay_ms(3000);
	cli();
 154:	f8 94       	cli
 156:	08 95       	ret

00000158 <__vector_17>:
    if(changeCount == 83) {
        //This is the end of the transmission
    }       
}

ISR(TIMER1_COMPA_vect) {
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
 162:	8f 93       	push	r24
 164:	9f 93       	push	r25
    microsec++;
 166:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <microsec>
 16a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <microsec+0x1>
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <microsec+0x1>
 174:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <microsec>
}
 178:	9f 91       	pop	r25
 17a:	8f 91       	pop	r24
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

00000186 <reset>:

void reset() {
	//print(reset);
    changeCount = 0;
 186:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <changeCount+0x1>
 18a:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <changeCount>

    humidity = 0;
 18e:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <humidity+0x1>
 192:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <humidity>
    temperature = 0;
 196:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <temperature+0x1>
 19a:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <temperature>
    checkSum = 0;
 19e:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <__data_end+0x1>
 1a2:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <__data_end>
 1a6:	08 95       	ret

000001a8 <setupTimer>:
	sprintf(temp, "%d", checkSum);
	print(temp);
}

void setupTimer() {
    TCCR1A = 0;    // set TCCR1A register to 0
 1a8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    TCCR1B = 0; // set TCCR1B register to 0 
 1ac:	e1 e8       	ldi	r30, 0x81	; 129
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	10 82       	st	Z, r1
    
	// turn on PWM mode:
    TCCR1B |= (1 << WGM02);
 1b2:	80 81       	ld	r24, Z
 1b4:	88 60       	ori	r24, 0x08	; 8
 1b6:	80 83       	st	Z, r24
	
    // Set CS12 bit so timer runs at clock speed: (no pre-scaling)
    TCCR1B |= (1 << CS10); // Sets bit CS10 in TCCR1B
 1b8:	80 81       	ld	r24, Z
 1ba:	81 60       	ori	r24, 0x01	; 1
 1bc:	80 83       	st	Z, r24
    
    // TOP
    OCR0A = 0x0010;    
 1be:	80 e1       	ldi	r24, 0x10	; 16
 1c0:	87 bd       	out	0x27, r24	; 39
    // set compare match register to desired timer count:
    OCR1A = 0x0008;
 1c2:	88 e0       	ldi	r24, 0x08	; 8
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 1ca:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
    
    // enable timer compare interrupt:
    TIMSK1 |= (1 << OCIE1A);
 1ce:	ef e6       	ldi	r30, 0x6F	; 111
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	82 60       	ori	r24, 0x02	; 2
 1d6:	80 83       	st	Z, r24
 1d8:	08 95       	ret

000001da <setupSerial>:
    
}

void setupSerial() {	
	portNum = 0;
 1da:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <portNum>
	baud = 19200L;
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	9b e4       	ldi	r25, 0x4B	; 75
 1e2:	a0 e0       	ldi	r26, 0x00	; 0
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <baud>
 1ea:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <baud+0x1>
 1ee:	a0 93 22 02 	sts	0x0222, r26	; 0x800222 <baud+0x2>
 1f2:	b0 93 23 02 	sts	0x0223, r27	; 0x800223 <baud+0x3>
	framingParam = SERIAL_8N1;
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <framingParam+0x1>
 1fe:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <framingParam>
	
	PSerial_open(portNum, baud, framingParam);
 202:	26 e0       	ldi	r18, 0x06	; 6
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	40 e0       	ldi	r20, 0x00	; 0
 208:	5b e4       	ldi	r21, 0x4B	; 75
 20a:	60 e0       	ldi	r22, 0x00	; 0
 20c:	70 e0       	ldi	r23, 0x00	; 0
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	ae c1       	rjmp	.+860    	; 0x56e <PSerial_open>
 212:	08 95       	ret

00000214 <print>:
}

void print(char *str) {
	print_String(portNum, str);
 214:	bc 01       	movw	r22, r24
 216:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <portNum>
 21a:	0e c1       	rjmp	.+540    	; 0x438 <print_String>
 21c:	08 95       	ret

0000021e <__vector_9>:
    //ready to receive the bits
	_delay_ms(3000);
	cli();
}

ISR(PCINT0_vect) {
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	0b b6       	in	r0, 0x3b	; 59
 22a:	0f 92       	push	r0
 22c:	2f 93       	push	r18
 22e:	3f 93       	push	r19
 230:	4f 93       	push	r20
 232:	5f 93       	push	r21
 234:	6f 93       	push	r22
 236:	7f 93       	push	r23
 238:	8f 93       	push	r24
 23a:	9f 93       	push	r25
 23c:	af 93       	push	r26
 23e:	bf 93       	push	r27
 240:	ef 93       	push	r30
 242:	ff 93       	push	r31
	//char temp[3];
	//sprintf(temp, "%d", microsec);
	//print(temp);
    if(((changeCount & 1) == 1) && changeCount > 1) {
 244:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 248:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 24c:	80 ff       	sbrs	r24, 0
 24e:	6c c0       	rjmp	.+216    	; 0x328 <__vector_9+0x10a>
 250:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 254:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 258:	02 97       	sbiw	r24, 0x02	; 2
 25a:	0c f4       	brge	.+2      	; 0x25e <__vector_9+0x40>
 25c:	65 c0       	rjmp	.+202    	; 0x328 <__vector_9+0x10a>
		print("gets here");
 25e:	88 e0       	ldi	r24, 0x08	; 8
 260:	92 e0       	ldi	r25, 0x02	; 2
 262:	d8 df       	rcall	.-80     	; 0x214 <print>
        if(changeCount < 34) {
 264:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 268:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 26c:	82 97       	sbiw	r24, 0x22	; 34
 26e:	dc f4       	brge	.+54     	; 0x2a6 <__vector_9+0x88>
            humidity <<= 1;
 270:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <humidity>
 274:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <humidity+0x1>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <humidity+0x1>
 280:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <humidity>
            if(microsec > 45) {
 284:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <microsec>
 288:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <microsec+0x1>
 28c:	8e 97       	sbiw	r24, 0x2e	; 46
 28e:	0c f4       	brge	.+2      	; 0x292 <__vector_9+0x74>
 290:	4b c0       	rjmp	.+150    	; 0x328 <__vector_9+0x10a>
                humidity |= 1;
 292:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <humidity>
 296:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <humidity+0x1>
 29a:	81 60       	ori	r24, 0x01	; 1
 29c:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <humidity+0x1>
 2a0:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <humidity>
 2a4:	41 c0       	rjmp	.+130    	; 0x328 <__vector_9+0x10a>
				}
        } else if (changeCount < 66) {
 2a6:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 2aa:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 2ae:	82 34       	cpi	r24, 0x42	; 66
 2b0:	91 05       	cpc	r25, r1
 2b2:	d4 f4       	brge	.+52     	; 0x2e8 <__vector_9+0xca>
            temperature <<= 1;
 2b4:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <temperature>
 2b8:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <temperature+0x1>
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <temperature+0x1>
 2c4:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <temperature>
            if(microsec > 45)
 2c8:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <microsec>
 2cc:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <microsec+0x1>
 2d0:	8e 97       	sbiw	r24, 0x2e	; 46
 2d2:	54 f1       	brlt	.+84     	; 0x328 <__vector_9+0x10a>
                temperature |= 1;
 2d4:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <temperature>
 2d8:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <temperature+0x1>
 2dc:	81 60       	ori	r24, 0x01	; 1
 2de:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <temperature+0x1>
 2e2:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <temperature>
 2e6:	20 c0       	rjmp	.+64     	; 0x328 <__vector_9+0x10a>
        } else if (changeCount < 82) {
 2e8:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 2ec:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 2f0:	82 35       	cpi	r24, 0x52	; 82
 2f2:	91 05       	cpc	r25, r1
 2f4:	cc f4       	brge	.+50     	; 0x328 <__vector_9+0x10a>
            checkSum <<= 1;
 2f6:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end>
 2fa:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <__data_end+0x1>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <__data_end+0x1>
 306:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
            if(microsec > 45)
 30a:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <microsec>
 30e:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <microsec+0x1>
 312:	8e 97       	sbiw	r24, 0x2e	; 46
 314:	4c f0       	brlt	.+18     	; 0x328 <__vector_9+0x10a>
                checkSum |= 1;
 316:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end>
 31a:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <__data_end+0x1>
 31e:	81 60       	ori	r24, 0x01	; 1
 320:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <__data_end+0x1>
 324:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
        } 
    }
    changeCount++;
 328:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 32c:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <changeCount+0x1>
 336:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <changeCount>
    if(changeCount == 83) {
 33a:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <changeCount>
 33e:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <changeCount+0x1>
        //This is the end of the transmission
    }       
}
 342:	ff 91       	pop	r31
 344:	ef 91       	pop	r30
 346:	bf 91       	pop	r27
 348:	af 91       	pop	r26
 34a:	9f 91       	pop	r25
 34c:	8f 91       	pop	r24
 34e:	7f 91       	pop	r23
 350:	6f 91       	pop	r22
 352:	5f 91       	pop	r21
 354:	4f 91       	pop	r20
 356:	3f 91       	pop	r19
 358:	2f 91       	pop	r18
 35a:	0f 90       	pop	r0
 35c:	0b be       	out	0x3b, r0	; 59
 35e:	0f 90       	pop	r0
 360:	0f be       	out	0x3f, r0	; 63
 362:	0f 90       	pop	r0
 364:	1f 90       	pop	r1
 366:	18 95       	reti

00000368 <processData>:
    temperature = 0;
    checkSum = 0;
}

//This method needs to calculate the humidity and temperature and print to the terminal
void processData() {
 368:	ef 92       	push	r14
 36a:	ff 92       	push	r15
 36c:	0f 93       	push	r16
 36e:	1f 93       	push	r17
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	00 d0       	rcall	.+0      	; 0x376 <processData+0xe>
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
	char temp[3];
	sprintf(temp, "%d", humidity);
 37a:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <humidity>
 37e:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <humidity+0x1>
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	0f 2e       	mov	r0, r31
 388:	f2 e1       	ldi	r31, 0x12	; 18
 38a:	ef 2e       	mov	r14, r31
 38c:	f2 e0       	ldi	r31, 0x02	; 2
 38e:	ff 2e       	mov	r15, r31
 390:	f0 2d       	mov	r31, r0
 392:	ff 92       	push	r15
 394:	ef 92       	push	r14
 396:	8e 01       	movw	r16, r28
 398:	0f 5f       	subi	r16, 0xFF	; 255
 39a:	1f 4f       	sbci	r17, 0xFF	; 255
 39c:	1f 93       	push	r17
 39e:	0f 93       	push	r16
 3a0:	0d d1       	rcall	.+538    	; 0x5bc <sprintf>
	print(temp);
 3a2:	c8 01       	movw	r24, r16
 3a4:	37 df       	rcall	.-402    	; 0x214 <print>
	sprintf(temp, "%d", temperature);
 3a6:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <temperature>
 3aa:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <temperature+0x1>
 3ae:	9f 93       	push	r25
 3b0:	8f 93       	push	r24
 3b2:	ff 92       	push	r15
 3b4:	ef 92       	push	r14
 3b6:	1f 93       	push	r17
 3b8:	0f 93       	push	r16
	print(temp);
 3ba:	00 d1       	rcall	.+512    	; 0x5bc <sprintf>
 3bc:	c8 01       	movw	r24, r16
 3be:	2a df       	rcall	.-428    	; 0x214 <print>
	
	sprintf(temp, "%d", checkSum);
 3c0:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end>
 3c4:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <__data_end+0x1>
 3c8:	9f 93       	push	r25
 3ca:	8f 93       	push	r24
 3cc:	ff 92       	push	r15
 3ce:	ef 92       	push	r14
 3d0:	1f 93       	push	r17
 3d2:	0f 93       	push	r16
	print(temp);
 3d4:	f3 d0       	rcall	.+486    	; 0x5bc <sprintf>
 3d6:	c8 01       	movw	r24, r16
 3d8:	1d df       	rcall	.-454    	; 0x214 <print>
}
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	df 91       	pop	r29
 3ec:	cf 91       	pop	r28
 3ee:	1f 91       	pop	r17
 3f0:	0f 91       	pop	r16
 3f2:	ff 90       	pop	r15
 3f4:	ef 90       	pop	r14
 3f6:	08 95       	ret

000003f8 <main>:
char * toString(int);
char * toString_rec(int, int, char *);

int main(void)
{
	PCICR = 1; //enable group interrupts on PORTB
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x700068>
	PCMSK0 |= (1 << port_mask);
 3fe:	eb e6       	ldi	r30, 0x6B	; 107
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	82 60       	ori	r24, 0x02	; 2
 406:	80 83       	st	Z, r24
	setupSerial();
 408:	e8 de       	rcall	.-560    	; 0x1da <setupSerial>
	setupTimer();
 40a:	ce de       	rcall	.-612    	; 0x1a8 <setupTimer>
 40c:	c2 e0       	ldi	r28, 0x02	; 2
        cli();
        //We're going to need... 
        //an interrupt handler
        //and timer integration
		
		DDRB = (1 << port_mask);
 40e:	f8 94       	cli
	setupSerial();
	setupTimer();
	
    while (1) 
    {
        cli();
 410:	c4 b9       	out	0x04, r28	; 4
        //and timer integration
		
		DDRB = (1 << port_mask);
		PORTB |= (1 << port_mask);
		
        recieveData();
 412:	29 9a       	sbi	0x05, 1	; 5
		processData();
 414:	87 de       	rcall	.-754    	; 0x124 <recieveData>
 416:	a8 df       	rcall	.-176    	; 0x368 <processData>
		reset();
 418:	b6 de       	rcall	.-660    	; 0x186 <reset>
 41a:	f9 cf       	rjmp	.-14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>

0000041c <PSerial_write>:
 41c:	e8 2f       	mov	r30, r24
	}
	c = serial_port[port]->udr; //c = read in the data;
	return c;
}
void PSerial_write(unsigned char port, char data) {
	while(!(serial_port[port]->ucsra & (1 << 5))) {
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	ee 0f       	add	r30, r30
 422:	ff 1f       	adc	r31, r31
 424:	e0 50       	subi	r30, 0x00	; 0
 426:	fe 4f       	sbci	r31, 0xFE	; 254
 428:	01 90       	ld	r0, Z+
 42a:	f0 81       	ld	r31, Z
 42c:	e0 2d       	mov	r30, r0
 42e:	80 81       	ld	r24, Z
 430:	85 ff       	sbrs	r24, 5
 432:	fd cf       	rjmp	.-6      	; 0x42e <PSerial_write+0x12>
	}
	serial_port[port]->udr = data; //write in the data = data;
 434:	66 83       	std	Z+6, r22	; 0x06
 436:	08 95       	ret

00000438 <print_String>:
}
void print_String(unsigned char port, char *str) {
 438:	ff 92       	push	r15
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	f8 2e       	mov	r15, r24
		int i;
		int length = strlen(str);
 444:	fb 01       	movw	r30, r22
 446:	01 90       	ld	r0, Z+
 448:	00 20       	and	r0, r0
 44a:	e9 f7       	brne	.-6      	; 0x446 <print_String+0xe>
 44c:	31 97       	sbiw	r30, 0x01	; 1
 44e:	e6 1b       	sub	r30, r22
 450:	f7 0b       	sbc	r31, r23
		for(i = 0; i < length; i++) {
 452:	1e 16       	cp	r1, r30
 454:	1f 06       	cpc	r1, r31
 456:	54 f4       	brge	.+20     	; 0x46c <print_String+0x34>
 458:	eb 01       	movw	r28, r22
 45a:	8b 01       	movw	r16, r22
 45c:	0e 0f       	add	r16, r30
 45e:	1f 1f       	adc	r17, r31
			PSerial_write(port, str[i]);
 460:	69 91       	ld	r22, Y+
 462:	8f 2d       	mov	r24, r15
 464:	db df       	rcall	.-74     	; 0x41c <PSerial_write>
	serial_port[port]->udr = data; //write in the data = data;
}
void print_String(unsigned char port, char *str) {
		int i;
		int length = strlen(str);
		for(i = 0; i < length; i++) {
 466:	c0 17       	cp	r28, r16
 468:	d1 07       	cpc	r29, r17
 46a:	d1 f7       	brne	.-12     	; 0x460 <print_String+0x28>
			PSerial_write(port, str[i]);
		}
		PSerial_write(port, '\n');
 46c:	6a e0       	ldi	r22, 0x0A	; 10
 46e:	8f 2d       	mov	r24, r15
 470:	d5 df       	rcall	.-86     	; 0x41c <PSerial_write>
}
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	1f 91       	pop	r17
 478:	0f 91       	pop	r16
 47a:	ff 90       	pop	r15
 47c:	08 95       	ret

0000047e <setUBRR>:
int setUBRR(long baud) {
	switch(baud){
 47e:	60 38       	cpi	r22, 0x80	; 128
 480:	20 e7       	ldi	r18, 0x70	; 112
 482:	72 07       	cpc	r23, r18
 484:	81 05       	cpc	r24, r1
 486:	91 05       	cpc	r25, r1
 488:	09 f4       	brne	.+2      	; 0x48c <setUBRR+0xe>
 48a:	56 c0       	rjmp	.+172    	; 0x538 <setUBRR+0xba>
 48c:	0c f5       	brge	.+66     	; 0x4d0 <setUBRR+0x52>
 48e:	60 38       	cpi	r22, 0x80	; 128
 490:	25 e2       	ldi	r18, 0x25	; 37
 492:	72 07       	cpc	r23, r18
 494:	81 05       	cpc	r24, r1
 496:	91 05       	cpc	r25, r1
 498:	09 f4       	brne	.+2      	; 0x49c <setUBRR+0x1e>
 49a:	45 c0       	rjmp	.+138    	; 0x526 <setUBRR+0xa8>
 49c:	6c f4       	brge	.+26     	; 0x4b8 <setUBRR+0x3a>
 49e:	60 36       	cpi	r22, 0x60	; 96
 4a0:	29 e0       	ldi	r18, 0x09	; 9
 4a2:	72 07       	cpc	r23, r18
 4a4:	81 05       	cpc	r24, r1
 4a6:	91 05       	cpc	r25, r1
 4a8:	09 f4       	brne	.+2      	; 0x4ac <setUBRR+0x2e>
 4aa:	5e c0       	rjmp	.+188    	; 0x568 <setUBRR+0xea>
 4ac:	60 3c       	cpi	r22, 0xC0	; 192
 4ae:	72 41       	sbci	r23, 0x12	; 18
 4b0:	81 05       	cpc	r24, r1
 4b2:	91 05       	cpc	r25, r1
 4b4:	a9 f1       	breq	.+106    	; 0x520 <setUBRR+0xa2>
 4b6:	55 c0       	rjmp	.+170    	; 0x562 <setUBRR+0xe4>
 4b8:	60 34       	cpi	r22, 0x40	; 64
 4ba:	28 e3       	ldi	r18, 0x38	; 56
 4bc:	72 07       	cpc	r23, r18
 4be:	81 05       	cpc	r24, r1
 4c0:	91 05       	cpc	r25, r1
 4c2:	a1 f1       	breq	.+104    	; 0x52c <setUBRR+0xae>
 4c4:	61 15       	cp	r22, r1
 4c6:	7b 44       	sbci	r23, 0x4B	; 75
 4c8:	81 05       	cpc	r24, r1
 4ca:	91 05       	cpc	r25, r1
 4cc:	91 f1       	breq	.+100    	; 0x532 <setUBRR+0xb4>
 4ce:	49 c0       	rjmp	.+146    	; 0x562 <setUBRR+0xe4>
 4d0:	61 15       	cp	r22, r1
 4d2:	2c e2       	ldi	r18, 0x2C	; 44
 4d4:	72 07       	cpc	r23, r18
 4d6:	21 e0       	ldi	r18, 0x01	; 1
 4d8:	82 07       	cpc	r24, r18
 4da:	91 05       	cpc	r25, r1
 4dc:	b1 f1       	breq	.+108    	; 0x54a <setUBRR+0xcc>
 4de:	64 f4       	brge	.+24     	; 0x4f8 <setUBRR+0x7a>
 4e0:	61 15       	cp	r22, r1
 4e2:	26 e9       	ldi	r18, 0x96	; 150
 4e4:	72 07       	cpc	r23, r18
 4e6:	81 05       	cpc	r24, r1
 4e8:	91 05       	cpc	r25, r1
 4ea:	49 f1       	breq	.+82     	; 0x53e <setUBRR+0xc0>
 4ec:	61 15       	cp	r22, r1
 4ee:	71 4e       	sbci	r23, 0xE1	; 225
 4f0:	81 05       	cpc	r24, r1
 4f2:	91 05       	cpc	r25, r1
 4f4:	39 f1       	breq	.+78     	; 0x544 <setUBRR+0xc6>
 4f6:	35 c0       	rjmp	.+106    	; 0x562 <setUBRR+0xe4>
 4f8:	61 15       	cp	r22, r1
 4fa:	24 e8       	ldi	r18, 0x84	; 132
 4fc:	72 07       	cpc	r23, r18
 4fe:	23 e0       	ldi	r18, 0x03	; 3
 500:	82 07       	cpc	r24, r18
 502:	91 05       	cpc	r25, r1
 504:	41 f1       	breq	.+80     	; 0x556 <setUBRR+0xd8>
 506:	60 39       	cpi	r22, 0x90	; 144
 508:	20 ed       	ldi	r18, 0xD0	; 208
 50a:	72 07       	cpc	r23, r18
 50c:	23 e0       	ldi	r18, 0x03	; 3
 50e:	82 07       	cpc	r24, r18
 510:	91 05       	cpc	r25, r1
 512:	21 f1       	breq	.+72     	; 0x55c <setUBRR+0xde>
 514:	61 15       	cp	r22, r1
 516:	72 4c       	sbci	r23, 0xC2	; 194
 518:	81 40       	sbci	r24, 0x01	; 1
 51a:	91 05       	cpc	r25, r1
 51c:	11 f5       	brne	.+68     	; 0x562 <setUBRR+0xe4>
 51e:	18 c0       	rjmp	.+48     	; 0x550 <setUBRR+0xd2>
		case 2400:
			return 416;
			break;
		case 4800:
			return 207;
 520:	8f ec       	ldi	r24, 0xCF	; 207
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	08 95       	ret
			break;
		case 9600:
			return 103;
 526:	87 e6       	ldi	r24, 0x67	; 103
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	08 95       	ret
			break;
		case 14400:
			return 68;
 52c:	84 e4       	ldi	r24, 0x44	; 68
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	08 95       	ret
			break;
		case 19200:
			return 51;
 532:	83 e3       	ldi	r24, 0x33	; 51
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	08 95       	ret
			break;
		case 28800:
			return 34;
 538:	82 e2       	ldi	r24, 0x22	; 34
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	08 95       	ret
			break;
		case 38400:
			return 25;
 53e:	89 e1       	ldi	r24, 0x19	; 25
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	08 95       	ret
			break;
		case 57600:
			return 16;
 544:	80 e1       	ldi	r24, 0x10	; 16
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	08 95       	ret
			break;
		case 76800:
			return 12;
 54a:	8c e0       	ldi	r24, 0x0C	; 12
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	08 95       	ret
			break;
		case 115200:
			return 8;
 550:	88 e0       	ldi	r24, 0x08	; 8
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	08 95       	ret
			break;
		case 230400:
			return 3;
 556:	83 e0       	ldi	r24, 0x03	; 3
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	08 95       	ret
			break;
		case 250000:
			return 3;
 55c:	83 e0       	ldi	r24, 0x03	; 3
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	08 95       	ret
			break;
		default:
			return -1;
 562:	8f ef       	ldi	r24, 0xFF	; 255
 564:	9f ef       	ldi	r25, 0xFF	; 255
 566:	08 95       	ret
		PSerial_write(port, '\n');
}
int setUBRR(long baud) {
	switch(baud){
		case 2400:
			return 416;
 568:	80 ea       	ldi	r24, 0xA0	; 160
 56a:	91 e0       	ldi	r25, 0x01	; 1
			return 3;
			break;
		default:
			return -1;
	}
}
 56c:	08 95       	ret

0000056e <PSerial_open>:
};

static unsigned char port;
static long baudrate;

void PSerial_open(unsigned char portNum, long speed, int framing) {
 56e:	ef 92       	push	r14
 570:	ff 92       	push	r15
 572:	1f 93       	push	r17
 574:	cf 93       	push	r28
 576:	df 93       	push	r29
 578:	12 2f       	mov	r17, r18
	port = portNum;
	baudrate = speed;
	serial_port[port]->ubrr = setUBRR(baudrate);
 57a:	c8 2f       	mov	r28, r24
 57c:	d0 e0       	ldi	r29, 0x00	; 0
 57e:	cc 0f       	add	r28, r28
 580:	dd 1f       	adc	r29, r29
 582:	c0 50       	subi	r28, 0x00	; 0
 584:	de 4f       	sbci	r29, 0xFE	; 254
 586:	e8 80       	ld	r14, Y
 588:	f9 80       	ldd	r15, Y+1	; 0x01
 58a:	cb 01       	movw	r24, r22
 58c:	ba 01       	movw	r22, r20
 58e:	77 df       	rcall	.-274    	; 0x47e <setUBRR>
 590:	f7 01       	movw	r30, r14
 592:	95 83       	std	Z+5, r25	; 0x05
 594:	84 83       	std	Z+4, r24	; 0x04
	serial_port[port]->ucsrc = framing;
 596:	e8 81       	ld	r30, Y
 598:	f9 81       	ldd	r31, Y+1	; 0x01
 59a:	12 83       	std	Z+2, r17	; 0x02
	//enable the receiving
	//UCSRnB bit 4
	serial_port[port]->ucsrb |= (1 << 4);
 59c:	e8 81       	ld	r30, Y
 59e:	f9 81       	ldd	r31, Y+1	; 0x01
 5a0:	81 81       	ldd	r24, Z+1	; 0x01
 5a2:	80 61       	ori	r24, 0x10	; 16
 5a4:	81 83       	std	Z+1, r24	; 0x01
	//enable the transmitting
	//UCSRnB bit 3
	serial_port[port]->ucsrb |= (1 << 3);
 5a6:	e8 81       	ld	r30, Y
 5a8:	f9 81       	ldd	r31, Y+1	; 0x01
 5aa:	81 81       	ldd	r24, Z+1	; 0x01
 5ac:	88 60       	ori	r24, 0x08	; 8
 5ae:	81 83       	std	Z+1, r24	; 0x01
}
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	1f 91       	pop	r17
 5b6:	ff 90       	pop	r15
 5b8:	ef 90       	pop	r14
 5ba:	08 95       	ret

000005bc <sprintf>:
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	cd b7       	in	r28, 0x3d	; 61
 5c6:	de b7       	in	r29, 0x3e	; 62
 5c8:	2e 97       	sbiw	r28, 0x0e	; 14
 5ca:	0f b6       	in	r0, 0x3f	; 63
 5cc:	f8 94       	cli
 5ce:	de bf       	out	0x3e, r29	; 62
 5d0:	0f be       	out	0x3f, r0	; 63
 5d2:	cd bf       	out	0x3d, r28	; 61
 5d4:	0e 89       	ldd	r16, Y+22	; 0x16
 5d6:	1f 89       	ldd	r17, Y+23	; 0x17
 5d8:	86 e0       	ldi	r24, 0x06	; 6
 5da:	8c 83       	std	Y+4, r24	; 0x04
 5dc:	1a 83       	std	Y+2, r17	; 0x02
 5de:	09 83       	std	Y+1, r16	; 0x01
 5e0:	8f ef       	ldi	r24, 0xFF	; 255
 5e2:	9f e7       	ldi	r25, 0x7F	; 127
 5e4:	9e 83       	std	Y+6, r25	; 0x06
 5e6:	8d 83       	std	Y+5, r24	; 0x05
 5e8:	ae 01       	movw	r20, r28
 5ea:	46 5e       	subi	r20, 0xE6	; 230
 5ec:	5f 4f       	sbci	r21, 0xFF	; 255
 5ee:	68 8d       	ldd	r22, Y+24	; 0x18
 5f0:	79 8d       	ldd	r23, Y+25	; 0x19
 5f2:	ce 01       	movw	r24, r28
 5f4:	01 96       	adiw	r24, 0x01	; 1
 5f6:	10 d0       	rcall	.+32     	; 0x618 <vfprintf>
 5f8:	ef 81       	ldd	r30, Y+7	; 0x07
 5fa:	f8 85       	ldd	r31, Y+8	; 0x08
 5fc:	e0 0f       	add	r30, r16
 5fe:	f1 1f       	adc	r31, r17
 600:	10 82       	st	Z, r1
 602:	2e 96       	adiw	r28, 0x0e	; 14
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	f8 94       	cli
 608:	de bf       	out	0x3e, r29	; 62
 60a:	0f be       	out	0x3f, r0	; 63
 60c:	cd bf       	out	0x3d, r28	; 61
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	1f 91       	pop	r17
 614:	0f 91       	pop	r16
 616:	08 95       	ret

00000618 <vfprintf>:
 618:	2f 92       	push	r2
 61a:	3f 92       	push	r3
 61c:	4f 92       	push	r4
 61e:	5f 92       	push	r5
 620:	6f 92       	push	r6
 622:	7f 92       	push	r7
 624:	8f 92       	push	r8
 626:	9f 92       	push	r9
 628:	af 92       	push	r10
 62a:	bf 92       	push	r11
 62c:	cf 92       	push	r12
 62e:	df 92       	push	r13
 630:	ef 92       	push	r14
 632:	ff 92       	push	r15
 634:	0f 93       	push	r16
 636:	1f 93       	push	r17
 638:	cf 93       	push	r28
 63a:	df 93       	push	r29
 63c:	cd b7       	in	r28, 0x3d	; 61
 63e:	de b7       	in	r29, 0x3e	; 62
 640:	2b 97       	sbiw	r28, 0x0b	; 11
 642:	0f b6       	in	r0, 0x3f	; 63
 644:	f8 94       	cli
 646:	de bf       	out	0x3e, r29	; 62
 648:	0f be       	out	0x3f, r0	; 63
 64a:	cd bf       	out	0x3d, r28	; 61
 64c:	6c 01       	movw	r12, r24
 64e:	7b 01       	movw	r14, r22
 650:	8a 01       	movw	r16, r20
 652:	fc 01       	movw	r30, r24
 654:	17 82       	std	Z+7, r1	; 0x07
 656:	16 82       	std	Z+6, r1	; 0x06
 658:	83 81       	ldd	r24, Z+3	; 0x03
 65a:	81 ff       	sbrs	r24, 1
 65c:	bf c1       	rjmp	.+894    	; 0x9dc <vfprintf+0x3c4>
 65e:	ce 01       	movw	r24, r28
 660:	01 96       	adiw	r24, 0x01	; 1
 662:	3c 01       	movw	r6, r24
 664:	f6 01       	movw	r30, r12
 666:	93 81       	ldd	r25, Z+3	; 0x03
 668:	f7 01       	movw	r30, r14
 66a:	93 fd       	sbrc	r25, 3
 66c:	85 91       	lpm	r24, Z+
 66e:	93 ff       	sbrs	r25, 3
 670:	81 91       	ld	r24, Z+
 672:	7f 01       	movw	r14, r30
 674:	88 23       	and	r24, r24
 676:	09 f4       	brne	.+2      	; 0x67a <vfprintf+0x62>
 678:	ad c1       	rjmp	.+858    	; 0x9d4 <vfprintf+0x3bc>
 67a:	85 32       	cpi	r24, 0x25	; 37
 67c:	39 f4       	brne	.+14     	; 0x68c <vfprintf+0x74>
 67e:	93 fd       	sbrc	r25, 3
 680:	85 91       	lpm	r24, Z+
 682:	93 ff       	sbrs	r25, 3
 684:	81 91       	ld	r24, Z+
 686:	7f 01       	movw	r14, r30
 688:	85 32       	cpi	r24, 0x25	; 37
 68a:	21 f4       	brne	.+8      	; 0x694 <vfprintf+0x7c>
 68c:	b6 01       	movw	r22, r12
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	d6 d1       	rcall	.+940    	; 0xa3e <fputc>
 692:	e8 cf       	rjmp	.-48     	; 0x664 <vfprintf+0x4c>
 694:	91 2c       	mov	r9, r1
 696:	21 2c       	mov	r2, r1
 698:	31 2c       	mov	r3, r1
 69a:	ff e1       	ldi	r31, 0x1F	; 31
 69c:	f3 15       	cp	r31, r3
 69e:	d8 f0       	brcs	.+54     	; 0x6d6 <vfprintf+0xbe>
 6a0:	8b 32       	cpi	r24, 0x2B	; 43
 6a2:	79 f0       	breq	.+30     	; 0x6c2 <vfprintf+0xaa>
 6a4:	38 f4       	brcc	.+14     	; 0x6b4 <vfprintf+0x9c>
 6a6:	80 32       	cpi	r24, 0x20	; 32
 6a8:	79 f0       	breq	.+30     	; 0x6c8 <vfprintf+0xb0>
 6aa:	83 32       	cpi	r24, 0x23	; 35
 6ac:	a1 f4       	brne	.+40     	; 0x6d6 <vfprintf+0xbe>
 6ae:	23 2d       	mov	r18, r3
 6b0:	20 61       	ori	r18, 0x10	; 16
 6b2:	1d c0       	rjmp	.+58     	; 0x6ee <vfprintf+0xd6>
 6b4:	8d 32       	cpi	r24, 0x2D	; 45
 6b6:	61 f0       	breq	.+24     	; 0x6d0 <vfprintf+0xb8>
 6b8:	80 33       	cpi	r24, 0x30	; 48
 6ba:	69 f4       	brne	.+26     	; 0x6d6 <vfprintf+0xbe>
 6bc:	23 2d       	mov	r18, r3
 6be:	21 60       	ori	r18, 0x01	; 1
 6c0:	16 c0       	rjmp	.+44     	; 0x6ee <vfprintf+0xd6>
 6c2:	83 2d       	mov	r24, r3
 6c4:	82 60       	ori	r24, 0x02	; 2
 6c6:	38 2e       	mov	r3, r24
 6c8:	e3 2d       	mov	r30, r3
 6ca:	e4 60       	ori	r30, 0x04	; 4
 6cc:	3e 2e       	mov	r3, r30
 6ce:	2a c0       	rjmp	.+84     	; 0x724 <vfprintf+0x10c>
 6d0:	f3 2d       	mov	r31, r3
 6d2:	f8 60       	ori	r31, 0x08	; 8
 6d4:	1d c0       	rjmp	.+58     	; 0x710 <vfprintf+0xf8>
 6d6:	37 fc       	sbrc	r3, 7
 6d8:	2d c0       	rjmp	.+90     	; 0x734 <vfprintf+0x11c>
 6da:	20 ed       	ldi	r18, 0xD0	; 208
 6dc:	28 0f       	add	r18, r24
 6de:	2a 30       	cpi	r18, 0x0A	; 10
 6e0:	40 f0       	brcs	.+16     	; 0x6f2 <vfprintf+0xda>
 6e2:	8e 32       	cpi	r24, 0x2E	; 46
 6e4:	b9 f4       	brne	.+46     	; 0x714 <vfprintf+0xfc>
 6e6:	36 fc       	sbrc	r3, 6
 6e8:	75 c1       	rjmp	.+746    	; 0x9d4 <vfprintf+0x3bc>
 6ea:	23 2d       	mov	r18, r3
 6ec:	20 64       	ori	r18, 0x40	; 64
 6ee:	32 2e       	mov	r3, r18
 6f0:	19 c0       	rjmp	.+50     	; 0x724 <vfprintf+0x10c>
 6f2:	36 fe       	sbrs	r3, 6
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <vfprintf+0xea>
 6f6:	8a e0       	ldi	r24, 0x0A	; 10
 6f8:	98 9e       	mul	r9, r24
 6fa:	20 0d       	add	r18, r0
 6fc:	11 24       	eor	r1, r1
 6fe:	92 2e       	mov	r9, r18
 700:	11 c0       	rjmp	.+34     	; 0x724 <vfprintf+0x10c>
 702:	ea e0       	ldi	r30, 0x0A	; 10
 704:	2e 9e       	mul	r2, r30
 706:	20 0d       	add	r18, r0
 708:	11 24       	eor	r1, r1
 70a:	22 2e       	mov	r2, r18
 70c:	f3 2d       	mov	r31, r3
 70e:	f0 62       	ori	r31, 0x20	; 32
 710:	3f 2e       	mov	r3, r31
 712:	08 c0       	rjmp	.+16     	; 0x724 <vfprintf+0x10c>
 714:	8c 36       	cpi	r24, 0x6C	; 108
 716:	21 f4       	brne	.+8      	; 0x720 <vfprintf+0x108>
 718:	83 2d       	mov	r24, r3
 71a:	80 68       	ori	r24, 0x80	; 128
 71c:	38 2e       	mov	r3, r24
 71e:	02 c0       	rjmp	.+4      	; 0x724 <vfprintf+0x10c>
 720:	88 36       	cpi	r24, 0x68	; 104
 722:	41 f4       	brne	.+16     	; 0x734 <vfprintf+0x11c>
 724:	f7 01       	movw	r30, r14
 726:	93 fd       	sbrc	r25, 3
 728:	85 91       	lpm	r24, Z+
 72a:	93 ff       	sbrs	r25, 3
 72c:	81 91       	ld	r24, Z+
 72e:	7f 01       	movw	r14, r30
 730:	81 11       	cpse	r24, r1
 732:	b3 cf       	rjmp	.-154    	; 0x69a <vfprintf+0x82>
 734:	98 2f       	mov	r25, r24
 736:	9f 7d       	andi	r25, 0xDF	; 223
 738:	95 54       	subi	r25, 0x45	; 69
 73a:	93 30       	cpi	r25, 0x03	; 3
 73c:	28 f4       	brcc	.+10     	; 0x748 <vfprintf+0x130>
 73e:	0c 5f       	subi	r16, 0xFC	; 252
 740:	1f 4f       	sbci	r17, 0xFF	; 255
 742:	9f e3       	ldi	r25, 0x3F	; 63
 744:	99 83       	std	Y+1, r25	; 0x01
 746:	0d c0       	rjmp	.+26     	; 0x762 <vfprintf+0x14a>
 748:	83 36       	cpi	r24, 0x63	; 99
 74a:	31 f0       	breq	.+12     	; 0x758 <vfprintf+0x140>
 74c:	83 37       	cpi	r24, 0x73	; 115
 74e:	71 f0       	breq	.+28     	; 0x76c <vfprintf+0x154>
 750:	83 35       	cpi	r24, 0x53	; 83
 752:	09 f0       	breq	.+2      	; 0x756 <vfprintf+0x13e>
 754:	55 c0       	rjmp	.+170    	; 0x800 <vfprintf+0x1e8>
 756:	20 c0       	rjmp	.+64     	; 0x798 <vfprintf+0x180>
 758:	f8 01       	movw	r30, r16
 75a:	80 81       	ld	r24, Z
 75c:	89 83       	std	Y+1, r24	; 0x01
 75e:	0e 5f       	subi	r16, 0xFE	; 254
 760:	1f 4f       	sbci	r17, 0xFF	; 255
 762:	88 24       	eor	r8, r8
 764:	83 94       	inc	r8
 766:	91 2c       	mov	r9, r1
 768:	53 01       	movw	r10, r6
 76a:	12 c0       	rjmp	.+36     	; 0x790 <vfprintf+0x178>
 76c:	28 01       	movw	r4, r16
 76e:	f2 e0       	ldi	r31, 0x02	; 2
 770:	4f 0e       	add	r4, r31
 772:	51 1c       	adc	r5, r1
 774:	f8 01       	movw	r30, r16
 776:	a0 80       	ld	r10, Z
 778:	b1 80       	ldd	r11, Z+1	; 0x01
 77a:	36 fe       	sbrs	r3, 6
 77c:	03 c0       	rjmp	.+6      	; 0x784 <vfprintf+0x16c>
 77e:	69 2d       	mov	r22, r9
 780:	70 e0       	ldi	r23, 0x00	; 0
 782:	02 c0       	rjmp	.+4      	; 0x788 <vfprintf+0x170>
 784:	6f ef       	ldi	r22, 0xFF	; 255
 786:	7f ef       	ldi	r23, 0xFF	; 255
 788:	c5 01       	movw	r24, r10
 78a:	4e d1       	rcall	.+668    	; 0xa28 <strnlen>
 78c:	4c 01       	movw	r8, r24
 78e:	82 01       	movw	r16, r4
 790:	f3 2d       	mov	r31, r3
 792:	ff 77       	andi	r31, 0x7F	; 127
 794:	3f 2e       	mov	r3, r31
 796:	15 c0       	rjmp	.+42     	; 0x7c2 <vfprintf+0x1aa>
 798:	28 01       	movw	r4, r16
 79a:	22 e0       	ldi	r18, 0x02	; 2
 79c:	42 0e       	add	r4, r18
 79e:	51 1c       	adc	r5, r1
 7a0:	f8 01       	movw	r30, r16
 7a2:	a0 80       	ld	r10, Z
 7a4:	b1 80       	ldd	r11, Z+1	; 0x01
 7a6:	36 fe       	sbrs	r3, 6
 7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <vfprintf+0x198>
 7aa:	69 2d       	mov	r22, r9
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <vfprintf+0x19c>
 7b0:	6f ef       	ldi	r22, 0xFF	; 255
 7b2:	7f ef       	ldi	r23, 0xFF	; 255
 7b4:	c5 01       	movw	r24, r10
 7b6:	2d d1       	rcall	.+602    	; 0xa12 <strnlen_P>
 7b8:	4c 01       	movw	r8, r24
 7ba:	f3 2d       	mov	r31, r3
 7bc:	f0 68       	ori	r31, 0x80	; 128
 7be:	3f 2e       	mov	r3, r31
 7c0:	82 01       	movw	r16, r4
 7c2:	33 fc       	sbrc	r3, 3
 7c4:	19 c0       	rjmp	.+50     	; 0x7f8 <vfprintf+0x1e0>
 7c6:	82 2d       	mov	r24, r2
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	88 16       	cp	r8, r24
 7cc:	99 06       	cpc	r9, r25
 7ce:	a0 f4       	brcc	.+40     	; 0x7f8 <vfprintf+0x1e0>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e2       	ldi	r24, 0x20	; 32
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	33 d1       	rcall	.+614    	; 0xa3e <fputc>
 7d8:	2a 94       	dec	r2
 7da:	f5 cf       	rjmp	.-22     	; 0x7c6 <vfprintf+0x1ae>
 7dc:	f5 01       	movw	r30, r10
 7de:	37 fc       	sbrc	r3, 7
 7e0:	85 91       	lpm	r24, Z+
 7e2:	37 fe       	sbrs	r3, 7
 7e4:	81 91       	ld	r24, Z+
 7e6:	5f 01       	movw	r10, r30
 7e8:	b6 01       	movw	r22, r12
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	28 d1       	rcall	.+592    	; 0xa3e <fputc>
 7ee:	21 10       	cpse	r2, r1
 7f0:	2a 94       	dec	r2
 7f2:	21 e0       	ldi	r18, 0x01	; 1
 7f4:	82 1a       	sub	r8, r18
 7f6:	91 08       	sbc	r9, r1
 7f8:	81 14       	cp	r8, r1
 7fa:	91 04       	cpc	r9, r1
 7fc:	79 f7       	brne	.-34     	; 0x7dc <vfprintf+0x1c4>
 7fe:	e1 c0       	rjmp	.+450    	; 0x9c2 <vfprintf+0x3aa>
 800:	84 36       	cpi	r24, 0x64	; 100
 802:	11 f0       	breq	.+4      	; 0x808 <vfprintf+0x1f0>
 804:	89 36       	cpi	r24, 0x69	; 105
 806:	39 f5       	brne	.+78     	; 0x856 <vfprintf+0x23e>
 808:	f8 01       	movw	r30, r16
 80a:	37 fe       	sbrs	r3, 7
 80c:	07 c0       	rjmp	.+14     	; 0x81c <vfprintf+0x204>
 80e:	60 81       	ld	r22, Z
 810:	71 81       	ldd	r23, Z+1	; 0x01
 812:	82 81       	ldd	r24, Z+2	; 0x02
 814:	93 81       	ldd	r25, Z+3	; 0x03
 816:	0c 5f       	subi	r16, 0xFC	; 252
 818:	1f 4f       	sbci	r17, 0xFF	; 255
 81a:	08 c0       	rjmp	.+16     	; 0x82c <vfprintf+0x214>
 81c:	60 81       	ld	r22, Z
 81e:	71 81       	ldd	r23, Z+1	; 0x01
 820:	07 2e       	mov	r0, r23
 822:	00 0c       	add	r0, r0
 824:	88 0b       	sbc	r24, r24
 826:	99 0b       	sbc	r25, r25
 828:	0e 5f       	subi	r16, 0xFE	; 254
 82a:	1f 4f       	sbci	r17, 0xFF	; 255
 82c:	f3 2d       	mov	r31, r3
 82e:	ff 76       	andi	r31, 0x6F	; 111
 830:	3f 2e       	mov	r3, r31
 832:	97 ff       	sbrs	r25, 7
 834:	09 c0       	rjmp	.+18     	; 0x848 <vfprintf+0x230>
 836:	90 95       	com	r25
 838:	80 95       	com	r24
 83a:	70 95       	com	r23
 83c:	61 95       	neg	r22
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	f0 68       	ori	r31, 0x80	; 128
 846:	3f 2e       	mov	r3, r31
 848:	2a e0       	ldi	r18, 0x0A	; 10
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	a3 01       	movw	r20, r6
 84e:	33 d1       	rcall	.+614    	; 0xab6 <__ultoa_invert>
 850:	88 2e       	mov	r8, r24
 852:	86 18       	sub	r8, r6
 854:	44 c0       	rjmp	.+136    	; 0x8de <vfprintf+0x2c6>
 856:	85 37       	cpi	r24, 0x75	; 117
 858:	31 f4       	brne	.+12     	; 0x866 <vfprintf+0x24e>
 85a:	23 2d       	mov	r18, r3
 85c:	2f 7e       	andi	r18, 0xEF	; 239
 85e:	b2 2e       	mov	r11, r18
 860:	2a e0       	ldi	r18, 0x0A	; 10
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	25 c0       	rjmp	.+74     	; 0x8b0 <vfprintf+0x298>
 866:	93 2d       	mov	r25, r3
 868:	99 7f       	andi	r25, 0xF9	; 249
 86a:	b9 2e       	mov	r11, r25
 86c:	8f 36       	cpi	r24, 0x6F	; 111
 86e:	c1 f0       	breq	.+48     	; 0x8a0 <vfprintf+0x288>
 870:	18 f4       	brcc	.+6      	; 0x878 <vfprintf+0x260>
 872:	88 35       	cpi	r24, 0x58	; 88
 874:	79 f0       	breq	.+30     	; 0x894 <vfprintf+0x27c>
 876:	ae c0       	rjmp	.+348    	; 0x9d4 <vfprintf+0x3bc>
 878:	80 37       	cpi	r24, 0x70	; 112
 87a:	19 f0       	breq	.+6      	; 0x882 <vfprintf+0x26a>
 87c:	88 37       	cpi	r24, 0x78	; 120
 87e:	21 f0       	breq	.+8      	; 0x888 <vfprintf+0x270>
 880:	a9 c0       	rjmp	.+338    	; 0x9d4 <vfprintf+0x3bc>
 882:	e9 2f       	mov	r30, r25
 884:	e0 61       	ori	r30, 0x10	; 16
 886:	be 2e       	mov	r11, r30
 888:	b4 fe       	sbrs	r11, 4
 88a:	0d c0       	rjmp	.+26     	; 0x8a6 <vfprintf+0x28e>
 88c:	fb 2d       	mov	r31, r11
 88e:	f4 60       	ori	r31, 0x04	; 4
 890:	bf 2e       	mov	r11, r31
 892:	09 c0       	rjmp	.+18     	; 0x8a6 <vfprintf+0x28e>
 894:	34 fe       	sbrs	r3, 4
 896:	0a c0       	rjmp	.+20     	; 0x8ac <vfprintf+0x294>
 898:	29 2f       	mov	r18, r25
 89a:	26 60       	ori	r18, 0x06	; 6
 89c:	b2 2e       	mov	r11, r18
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <vfprintf+0x294>
 8a0:	28 e0       	ldi	r18, 0x08	; 8
 8a2:	30 e0       	ldi	r19, 0x00	; 0
 8a4:	05 c0       	rjmp	.+10     	; 0x8b0 <vfprintf+0x298>
 8a6:	20 e1       	ldi	r18, 0x10	; 16
 8a8:	30 e0       	ldi	r19, 0x00	; 0
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <vfprintf+0x298>
 8ac:	20 e1       	ldi	r18, 0x10	; 16
 8ae:	32 e0       	ldi	r19, 0x02	; 2
 8b0:	f8 01       	movw	r30, r16
 8b2:	b7 fe       	sbrs	r11, 7
 8b4:	07 c0       	rjmp	.+14     	; 0x8c4 <vfprintf+0x2ac>
 8b6:	60 81       	ld	r22, Z
 8b8:	71 81       	ldd	r23, Z+1	; 0x01
 8ba:	82 81       	ldd	r24, Z+2	; 0x02
 8bc:	93 81       	ldd	r25, Z+3	; 0x03
 8be:	0c 5f       	subi	r16, 0xFC	; 252
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <vfprintf+0x2b8>
 8c4:	60 81       	ld	r22, Z
 8c6:	71 81       	ldd	r23, Z+1	; 0x01
 8c8:	80 e0       	ldi	r24, 0x00	; 0
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	0e 5f       	subi	r16, 0xFE	; 254
 8ce:	1f 4f       	sbci	r17, 0xFF	; 255
 8d0:	a3 01       	movw	r20, r6
 8d2:	f1 d0       	rcall	.+482    	; 0xab6 <__ultoa_invert>
 8d4:	88 2e       	mov	r8, r24
 8d6:	86 18       	sub	r8, r6
 8d8:	fb 2d       	mov	r31, r11
 8da:	ff 77       	andi	r31, 0x7F	; 127
 8dc:	3f 2e       	mov	r3, r31
 8de:	36 fe       	sbrs	r3, 6
 8e0:	0d c0       	rjmp	.+26     	; 0x8fc <vfprintf+0x2e4>
 8e2:	23 2d       	mov	r18, r3
 8e4:	2e 7f       	andi	r18, 0xFE	; 254
 8e6:	a2 2e       	mov	r10, r18
 8e8:	89 14       	cp	r8, r9
 8ea:	58 f4       	brcc	.+22     	; 0x902 <vfprintf+0x2ea>
 8ec:	34 fe       	sbrs	r3, 4
 8ee:	0b c0       	rjmp	.+22     	; 0x906 <vfprintf+0x2ee>
 8f0:	32 fc       	sbrc	r3, 2
 8f2:	09 c0       	rjmp	.+18     	; 0x906 <vfprintf+0x2ee>
 8f4:	83 2d       	mov	r24, r3
 8f6:	8e 7e       	andi	r24, 0xEE	; 238
 8f8:	a8 2e       	mov	r10, r24
 8fa:	05 c0       	rjmp	.+10     	; 0x906 <vfprintf+0x2ee>
 8fc:	b8 2c       	mov	r11, r8
 8fe:	a3 2c       	mov	r10, r3
 900:	03 c0       	rjmp	.+6      	; 0x908 <vfprintf+0x2f0>
 902:	b8 2c       	mov	r11, r8
 904:	01 c0       	rjmp	.+2      	; 0x908 <vfprintf+0x2f0>
 906:	b9 2c       	mov	r11, r9
 908:	a4 fe       	sbrs	r10, 4
 90a:	0f c0       	rjmp	.+30     	; 0x92a <vfprintf+0x312>
 90c:	fe 01       	movw	r30, r28
 90e:	e8 0d       	add	r30, r8
 910:	f1 1d       	adc	r31, r1
 912:	80 81       	ld	r24, Z
 914:	80 33       	cpi	r24, 0x30	; 48
 916:	21 f4       	brne	.+8      	; 0x920 <vfprintf+0x308>
 918:	9a 2d       	mov	r25, r10
 91a:	99 7e       	andi	r25, 0xE9	; 233
 91c:	a9 2e       	mov	r10, r25
 91e:	09 c0       	rjmp	.+18     	; 0x932 <vfprintf+0x31a>
 920:	a2 fe       	sbrs	r10, 2
 922:	06 c0       	rjmp	.+12     	; 0x930 <vfprintf+0x318>
 924:	b3 94       	inc	r11
 926:	b3 94       	inc	r11
 928:	04 c0       	rjmp	.+8      	; 0x932 <vfprintf+0x31a>
 92a:	8a 2d       	mov	r24, r10
 92c:	86 78       	andi	r24, 0x86	; 134
 92e:	09 f0       	breq	.+2      	; 0x932 <vfprintf+0x31a>
 930:	b3 94       	inc	r11
 932:	a3 fc       	sbrc	r10, 3
 934:	10 c0       	rjmp	.+32     	; 0x956 <vfprintf+0x33e>
 936:	a0 fe       	sbrs	r10, 0
 938:	06 c0       	rjmp	.+12     	; 0x946 <vfprintf+0x32e>
 93a:	b2 14       	cp	r11, r2
 93c:	80 f4       	brcc	.+32     	; 0x95e <vfprintf+0x346>
 93e:	28 0c       	add	r2, r8
 940:	92 2c       	mov	r9, r2
 942:	9b 18       	sub	r9, r11
 944:	0d c0       	rjmp	.+26     	; 0x960 <vfprintf+0x348>
 946:	b2 14       	cp	r11, r2
 948:	58 f4       	brcc	.+22     	; 0x960 <vfprintf+0x348>
 94a:	b6 01       	movw	r22, r12
 94c:	80 e2       	ldi	r24, 0x20	; 32
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	76 d0       	rcall	.+236    	; 0xa3e <fputc>
 952:	b3 94       	inc	r11
 954:	f8 cf       	rjmp	.-16     	; 0x946 <vfprintf+0x32e>
 956:	b2 14       	cp	r11, r2
 958:	18 f4       	brcc	.+6      	; 0x960 <vfprintf+0x348>
 95a:	2b 18       	sub	r2, r11
 95c:	02 c0       	rjmp	.+4      	; 0x962 <vfprintf+0x34a>
 95e:	98 2c       	mov	r9, r8
 960:	21 2c       	mov	r2, r1
 962:	a4 fe       	sbrs	r10, 4
 964:	0f c0       	rjmp	.+30     	; 0x984 <vfprintf+0x36c>
 966:	b6 01       	movw	r22, r12
 968:	80 e3       	ldi	r24, 0x30	; 48
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	68 d0       	rcall	.+208    	; 0xa3e <fputc>
 96e:	a2 fe       	sbrs	r10, 2
 970:	16 c0       	rjmp	.+44     	; 0x99e <vfprintf+0x386>
 972:	a1 fc       	sbrc	r10, 1
 974:	03 c0       	rjmp	.+6      	; 0x97c <vfprintf+0x364>
 976:	88 e7       	ldi	r24, 0x78	; 120
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	02 c0       	rjmp	.+4      	; 0x980 <vfprintf+0x368>
 97c:	88 e5       	ldi	r24, 0x58	; 88
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	b6 01       	movw	r22, r12
 982:	0c c0       	rjmp	.+24     	; 0x99c <vfprintf+0x384>
 984:	8a 2d       	mov	r24, r10
 986:	86 78       	andi	r24, 0x86	; 134
 988:	51 f0       	breq	.+20     	; 0x99e <vfprintf+0x386>
 98a:	a1 fe       	sbrs	r10, 1
 98c:	02 c0       	rjmp	.+4      	; 0x992 <vfprintf+0x37a>
 98e:	8b e2       	ldi	r24, 0x2B	; 43
 990:	01 c0       	rjmp	.+2      	; 0x994 <vfprintf+0x37c>
 992:	80 e2       	ldi	r24, 0x20	; 32
 994:	a7 fc       	sbrc	r10, 7
 996:	8d e2       	ldi	r24, 0x2D	; 45
 998:	b6 01       	movw	r22, r12
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	50 d0       	rcall	.+160    	; 0xa3e <fputc>
 99e:	89 14       	cp	r8, r9
 9a0:	30 f4       	brcc	.+12     	; 0x9ae <vfprintf+0x396>
 9a2:	b6 01       	movw	r22, r12
 9a4:	80 e3       	ldi	r24, 0x30	; 48
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	4a d0       	rcall	.+148    	; 0xa3e <fputc>
 9aa:	9a 94       	dec	r9
 9ac:	f8 cf       	rjmp	.-16     	; 0x99e <vfprintf+0x386>
 9ae:	8a 94       	dec	r8
 9b0:	f3 01       	movw	r30, r6
 9b2:	e8 0d       	add	r30, r8
 9b4:	f1 1d       	adc	r31, r1
 9b6:	80 81       	ld	r24, Z
 9b8:	b6 01       	movw	r22, r12
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	40 d0       	rcall	.+128    	; 0xa3e <fputc>
 9be:	81 10       	cpse	r8, r1
 9c0:	f6 cf       	rjmp	.-20     	; 0x9ae <vfprintf+0x396>
 9c2:	22 20       	and	r2, r2
 9c4:	09 f4       	brne	.+2      	; 0x9c8 <vfprintf+0x3b0>
 9c6:	4e ce       	rjmp	.-868    	; 0x664 <vfprintf+0x4c>
 9c8:	b6 01       	movw	r22, r12
 9ca:	80 e2       	ldi	r24, 0x20	; 32
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	37 d0       	rcall	.+110    	; 0xa3e <fputc>
 9d0:	2a 94       	dec	r2
 9d2:	f7 cf       	rjmp	.-18     	; 0x9c2 <vfprintf+0x3aa>
 9d4:	f6 01       	movw	r30, r12
 9d6:	86 81       	ldd	r24, Z+6	; 0x06
 9d8:	97 81       	ldd	r25, Z+7	; 0x07
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <vfprintf+0x3c8>
 9dc:	8f ef       	ldi	r24, 0xFF	; 255
 9de:	9f ef       	ldi	r25, 0xFF	; 255
 9e0:	2b 96       	adiw	r28, 0x0b	; 11
 9e2:	0f b6       	in	r0, 0x3f	; 63
 9e4:	f8 94       	cli
 9e6:	de bf       	out	0x3e, r29	; 62
 9e8:	0f be       	out	0x3f, r0	; 63
 9ea:	cd bf       	out	0x3d, r28	; 61
 9ec:	df 91       	pop	r29
 9ee:	cf 91       	pop	r28
 9f0:	1f 91       	pop	r17
 9f2:	0f 91       	pop	r16
 9f4:	ff 90       	pop	r15
 9f6:	ef 90       	pop	r14
 9f8:	df 90       	pop	r13
 9fa:	cf 90       	pop	r12
 9fc:	bf 90       	pop	r11
 9fe:	af 90       	pop	r10
 a00:	9f 90       	pop	r9
 a02:	8f 90       	pop	r8
 a04:	7f 90       	pop	r7
 a06:	6f 90       	pop	r6
 a08:	5f 90       	pop	r5
 a0a:	4f 90       	pop	r4
 a0c:	3f 90       	pop	r3
 a0e:	2f 90       	pop	r2
 a10:	08 95       	ret

00000a12 <strnlen_P>:
 a12:	fc 01       	movw	r30, r24
 a14:	05 90       	lpm	r0, Z+
 a16:	61 50       	subi	r22, 0x01	; 1
 a18:	70 40       	sbci	r23, 0x00	; 0
 a1a:	01 10       	cpse	r0, r1
 a1c:	d8 f7       	brcc	.-10     	; 0xa14 <strnlen_P+0x2>
 a1e:	80 95       	com	r24
 a20:	90 95       	com	r25
 a22:	8e 0f       	add	r24, r30
 a24:	9f 1f       	adc	r25, r31
 a26:	08 95       	ret

00000a28 <strnlen>:
 a28:	fc 01       	movw	r30, r24
 a2a:	61 50       	subi	r22, 0x01	; 1
 a2c:	70 40       	sbci	r23, 0x00	; 0
 a2e:	01 90       	ld	r0, Z+
 a30:	01 10       	cpse	r0, r1
 a32:	d8 f7       	brcc	.-10     	; 0xa2a <strnlen+0x2>
 a34:	80 95       	com	r24
 a36:	90 95       	com	r25
 a38:	8e 0f       	add	r24, r30
 a3a:	9f 1f       	adc	r25, r31
 a3c:	08 95       	ret

00000a3e <fputc>:
 a3e:	0f 93       	push	r16
 a40:	1f 93       	push	r17
 a42:	cf 93       	push	r28
 a44:	df 93       	push	r29
 a46:	fb 01       	movw	r30, r22
 a48:	23 81       	ldd	r18, Z+3	; 0x03
 a4a:	21 fd       	sbrc	r18, 1
 a4c:	03 c0       	rjmp	.+6      	; 0xa54 <fputc+0x16>
 a4e:	8f ef       	ldi	r24, 0xFF	; 255
 a50:	9f ef       	ldi	r25, 0xFF	; 255
 a52:	2c c0       	rjmp	.+88     	; 0xaac <fputc+0x6e>
 a54:	22 ff       	sbrs	r18, 2
 a56:	16 c0       	rjmp	.+44     	; 0xa84 <fputc+0x46>
 a58:	46 81       	ldd	r20, Z+6	; 0x06
 a5a:	57 81       	ldd	r21, Z+7	; 0x07
 a5c:	24 81       	ldd	r18, Z+4	; 0x04
 a5e:	35 81       	ldd	r19, Z+5	; 0x05
 a60:	42 17       	cp	r20, r18
 a62:	53 07       	cpc	r21, r19
 a64:	44 f4       	brge	.+16     	; 0xa76 <fputc+0x38>
 a66:	a0 81       	ld	r26, Z
 a68:	b1 81       	ldd	r27, Z+1	; 0x01
 a6a:	9d 01       	movw	r18, r26
 a6c:	2f 5f       	subi	r18, 0xFF	; 255
 a6e:	3f 4f       	sbci	r19, 0xFF	; 255
 a70:	31 83       	std	Z+1, r19	; 0x01
 a72:	20 83       	st	Z, r18
 a74:	8c 93       	st	X, r24
 a76:	26 81       	ldd	r18, Z+6	; 0x06
 a78:	37 81       	ldd	r19, Z+7	; 0x07
 a7a:	2f 5f       	subi	r18, 0xFF	; 255
 a7c:	3f 4f       	sbci	r19, 0xFF	; 255
 a7e:	37 83       	std	Z+7, r19	; 0x07
 a80:	26 83       	std	Z+6, r18	; 0x06
 a82:	14 c0       	rjmp	.+40     	; 0xaac <fputc+0x6e>
 a84:	8b 01       	movw	r16, r22
 a86:	ec 01       	movw	r28, r24
 a88:	fb 01       	movw	r30, r22
 a8a:	00 84       	ldd	r0, Z+8	; 0x08
 a8c:	f1 85       	ldd	r31, Z+9	; 0x09
 a8e:	e0 2d       	mov	r30, r0
 a90:	19 95       	eicall
 a92:	89 2b       	or	r24, r25
 a94:	e1 f6       	brne	.-72     	; 0xa4e <fputc+0x10>
 a96:	d8 01       	movw	r26, r16
 a98:	16 96       	adiw	r26, 0x06	; 6
 a9a:	8d 91       	ld	r24, X+
 a9c:	9c 91       	ld	r25, X
 a9e:	17 97       	sbiw	r26, 0x07	; 7
 aa0:	01 96       	adiw	r24, 0x01	; 1
 aa2:	17 96       	adiw	r26, 0x07	; 7
 aa4:	9c 93       	st	X, r25
 aa6:	8e 93       	st	-X, r24
 aa8:	16 97       	sbiw	r26, 0x06	; 6
 aaa:	ce 01       	movw	r24, r28
 aac:	df 91       	pop	r29
 aae:	cf 91       	pop	r28
 ab0:	1f 91       	pop	r17
 ab2:	0f 91       	pop	r16
 ab4:	08 95       	ret

00000ab6 <__ultoa_invert>:
 ab6:	fa 01       	movw	r30, r20
 ab8:	aa 27       	eor	r26, r26
 aba:	28 30       	cpi	r18, 0x08	; 8
 abc:	51 f1       	breq	.+84     	; 0xb12 <__ultoa_invert+0x5c>
 abe:	20 31       	cpi	r18, 0x10	; 16
 ac0:	81 f1       	breq	.+96     	; 0xb22 <__ultoa_invert+0x6c>
 ac2:	e8 94       	clt
 ac4:	6f 93       	push	r22
 ac6:	6e 7f       	andi	r22, 0xFE	; 254
 ac8:	6e 5f       	subi	r22, 0xFE	; 254
 aca:	7f 4f       	sbci	r23, 0xFF	; 255
 acc:	8f 4f       	sbci	r24, 0xFF	; 255
 ace:	9f 4f       	sbci	r25, 0xFF	; 255
 ad0:	af 4f       	sbci	r26, 0xFF	; 255
 ad2:	b1 e0       	ldi	r27, 0x01	; 1
 ad4:	3e d0       	rcall	.+124    	; 0xb52 <__ultoa_invert+0x9c>
 ad6:	b4 e0       	ldi	r27, 0x04	; 4
 ad8:	3c d0       	rcall	.+120    	; 0xb52 <__ultoa_invert+0x9c>
 ada:	67 0f       	add	r22, r23
 adc:	78 1f       	adc	r23, r24
 ade:	89 1f       	adc	r24, r25
 ae0:	9a 1f       	adc	r25, r26
 ae2:	a1 1d       	adc	r26, r1
 ae4:	68 0f       	add	r22, r24
 ae6:	79 1f       	adc	r23, r25
 ae8:	8a 1f       	adc	r24, r26
 aea:	91 1d       	adc	r25, r1
 aec:	a1 1d       	adc	r26, r1
 aee:	6a 0f       	add	r22, r26
 af0:	71 1d       	adc	r23, r1
 af2:	81 1d       	adc	r24, r1
 af4:	91 1d       	adc	r25, r1
 af6:	a1 1d       	adc	r26, r1
 af8:	20 d0       	rcall	.+64     	; 0xb3a <__ultoa_invert+0x84>
 afa:	09 f4       	brne	.+2      	; 0xafe <__ultoa_invert+0x48>
 afc:	68 94       	set
 afe:	3f 91       	pop	r19
 b00:	2a e0       	ldi	r18, 0x0A	; 10
 b02:	26 9f       	mul	r18, r22
 b04:	11 24       	eor	r1, r1
 b06:	30 19       	sub	r19, r0
 b08:	30 5d       	subi	r19, 0xD0	; 208
 b0a:	31 93       	st	Z+, r19
 b0c:	de f6       	brtc	.-74     	; 0xac4 <__ultoa_invert+0xe>
 b0e:	cf 01       	movw	r24, r30
 b10:	08 95       	ret
 b12:	46 2f       	mov	r20, r22
 b14:	47 70       	andi	r20, 0x07	; 7
 b16:	40 5d       	subi	r20, 0xD0	; 208
 b18:	41 93       	st	Z+, r20
 b1a:	b3 e0       	ldi	r27, 0x03	; 3
 b1c:	0f d0       	rcall	.+30     	; 0xb3c <__ultoa_invert+0x86>
 b1e:	c9 f7       	brne	.-14     	; 0xb12 <__ultoa_invert+0x5c>
 b20:	f6 cf       	rjmp	.-20     	; 0xb0e <__ultoa_invert+0x58>
 b22:	46 2f       	mov	r20, r22
 b24:	4f 70       	andi	r20, 0x0F	; 15
 b26:	40 5d       	subi	r20, 0xD0	; 208
 b28:	4a 33       	cpi	r20, 0x3A	; 58
 b2a:	18 f0       	brcs	.+6      	; 0xb32 <__ultoa_invert+0x7c>
 b2c:	49 5d       	subi	r20, 0xD9	; 217
 b2e:	31 fd       	sbrc	r19, 1
 b30:	40 52       	subi	r20, 0x20	; 32
 b32:	41 93       	st	Z+, r20
 b34:	02 d0       	rcall	.+4      	; 0xb3a <__ultoa_invert+0x84>
 b36:	a9 f7       	brne	.-22     	; 0xb22 <__ultoa_invert+0x6c>
 b38:	ea cf       	rjmp	.-44     	; 0xb0e <__ultoa_invert+0x58>
 b3a:	b4 e0       	ldi	r27, 0x04	; 4
 b3c:	a6 95       	lsr	r26
 b3e:	97 95       	ror	r25
 b40:	87 95       	ror	r24
 b42:	77 95       	ror	r23
 b44:	67 95       	ror	r22
 b46:	ba 95       	dec	r27
 b48:	c9 f7       	brne	.-14     	; 0xb3c <__ultoa_invert+0x86>
 b4a:	00 97       	sbiw	r24, 0x00	; 0
 b4c:	61 05       	cpc	r22, r1
 b4e:	71 05       	cpc	r23, r1
 b50:	08 95       	ret
 b52:	9b 01       	movw	r18, r22
 b54:	ac 01       	movw	r20, r24
 b56:	0a 2e       	mov	r0, r26
 b58:	06 94       	lsr	r0
 b5a:	57 95       	ror	r21
 b5c:	47 95       	ror	r20
 b5e:	37 95       	ror	r19
 b60:	27 95       	ror	r18
 b62:	ba 95       	dec	r27
 b64:	c9 f7       	brne	.-14     	; 0xb58 <__ultoa_invert+0xa2>
 b66:	62 0f       	add	r22, r18
 b68:	73 1f       	adc	r23, r19
 b6a:	84 1f       	adc	r24, r20
 b6c:	95 1f       	adc	r25, r21
 b6e:	a0 1d       	adc	r26, r0
 b70:	08 95       	ret

00000b72 <_exit>:
 b72:	f8 94       	cli

00000b74 <__stop_program>:
 b74:	ff cf       	rjmp	.-2      	; 0xb74 <__stop_program>
